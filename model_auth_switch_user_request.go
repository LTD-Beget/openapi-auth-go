/*
API Аутентификации

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiAuth

import (
	"encoding/json"
)

// AuthSwitchUserRequest struct for AuthSwitchUserRequest
type AuthSwitchUserRequest struct {
	Login *string `json:"login,omitempty"`
	Password *string `json:"password,omitempty"`
	Code *string `json:"code,omitempty"`
}

// NewAuthSwitchUserRequest instantiates a new AuthSwitchUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthSwitchUserRequest() *AuthSwitchUserRequest {
	this := AuthSwitchUserRequest{}
	return &this
}

// NewAuthSwitchUserRequestWithDefaults instantiates a new AuthSwitchUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthSwitchUserRequestWithDefaults() *AuthSwitchUserRequest {
	this := AuthSwitchUserRequest{}
	return &this
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *AuthSwitchUserRequest) GetLogin() string {
	if o == nil || isNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthSwitchUserRequest) GetLoginOk() (*string, bool) {
	if o == nil || isNil(o.Login) {
    return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *AuthSwitchUserRequest) HasLogin() bool {
	if o != nil && !isNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *AuthSwitchUserRequest) SetLogin(v string) {
	o.Login = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AuthSwitchUserRequest) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthSwitchUserRequest) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AuthSwitchUserRequest) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AuthSwitchUserRequest) SetPassword(v string) {
	o.Password = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AuthSwitchUserRequest) GetCode() string {
	if o == nil || isNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthSwitchUserRequest) GetCodeOk() (*string, bool) {
	if o == nil || isNil(o.Code) {
    return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *AuthSwitchUserRequest) HasCode() bool {
	if o != nil && !isNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *AuthSwitchUserRequest) SetCode(v string) {
	o.Code = &v
}

func (o AuthSwitchUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableAuthSwitchUserRequest struct {
	value *AuthSwitchUserRequest
	isSet bool
}

func (v NullableAuthSwitchUserRequest) Get() *AuthSwitchUserRequest {
	return v.value
}

func (v *NullableAuthSwitchUserRequest) Set(val *AuthSwitchUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthSwitchUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthSwitchUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthSwitchUserRequest(val *AuthSwitchUserRequest) *NullableAuthSwitchUserRequest {
	return &NullableAuthSwitchUserRequest{value: val, isSet: true}
}

func (v NullableAuthSwitchUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthSwitchUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


